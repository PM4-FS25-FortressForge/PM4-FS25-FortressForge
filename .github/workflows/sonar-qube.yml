name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history is available for SonarQube

      - name: Install Unity
        uses: game-ci/unity-setup@v2
        with:
          unityVersion: 2022.3.5f1  # Change to match your Unity version

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Install .NET SonarScanner
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          cd FortressForge
          dotnet sonarscanner begin \
            /k:"FortressForge" \
            /o:"your_organization" \
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.exclusions="**/*.meta,**/*.unity,**/*.prefab,**/*.mat,Packages/**,Temp/**,Logs/**" \
            /d:sonar.cs.opencover.reportsPaths=./coverage.xml \
            /d:sonar.verbose=true

      - name: Build Unity Project (Required for Analysis)
        run: |
          cd FortressForge
          /opt/unity/Editor/Unity -batchmode -quit -nographics -logFile -projectPath "$(pwd)" -buildTarget StandaloneWindows64 -executeMethod UnityEditor.BuildPipeline.BuildPlayer

      - name: Build Solution (Required for C# Analysis)
        run: |
          cd FortressForge
          dotnet build --no-incremental

      - name: End SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd FortressForge
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"