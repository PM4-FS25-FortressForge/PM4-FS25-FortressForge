name: sonarqube-check
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:
jobs:
  sonarqube-check:
    runs-on: self-hosted
    env:
      DOTNET_ROOT: '/home/ubuntu/.dotnet/sdk/6.0.428'  # Update this path to your .NET 6 or later SDK installation
      JAVA_HOME: '/usr/lib/jvm/java-17-openjdk-amd64'
      PATH: '${JAVA_HOME}/bin:${PATH}:${HOME}/.dotnet/tools'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install JDK 17 for SonarScanner .NET
        run: |
          sudo apt update
          sudo apt install -y openjdk-17-jre-headless
      - name: Install SonarScanner .NET
        run: |
          dotnet tool install --global dotnet-sonarscanner --version 10.1.1
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-2020.3.17
      - name: Activate Unity and generate solution file
        continue-on-error: true
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        run: |
          unity-editor -username $UNITY_EMAIL -password $UNITY_PASSWORD -serial $UNITY_SERIAL -nographics -batchmode -logFile /dev/stdout -projectPath . -executeMethod UnityEditor.SyncVS.SyncSolution -quit
          unity-editor -username $UNITY_EMAIL -password $UNITY_PASSWORD -serial $UNITY_SERIAL -nographics -batchmode -logFile /dev/stdout -projectPath . -executeMethod UnityEditor.SyncVS.SyncSolution -quit
      - name: Build and scan project
        env:
          FrameworkPathOverride: '/opt/unity/Editor/Data/MonoBleedingEdge/bin'
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          dotnet-sonarscanner begin /k:"FortressForge" /d:sonar.login="$SONAR_TOKEN" /d:sonar.host.url="$SONAR_HOST_URL"
          dotnet build PM4-FS25-FortressForge.sln
          dotnet-sonarscanner end /d:sonar.login="$SONAR_TOKEN"